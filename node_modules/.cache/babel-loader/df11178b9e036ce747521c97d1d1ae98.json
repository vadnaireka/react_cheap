{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _FixedDataTableCellDefault = require('./FixedDataTableCellDefault');\n\nvar _FixedDataTableCellDefault2 = _interopRequireDefault(_FixedDataTableCellDefault);\n\nvar _FixedDataTableColumnReorderHandle = require('././FixedDataTableColumnReorderHandle');\n\nvar _FixedDataTableColumnReorderHandle2 = _interopRequireDefault(_FixedDataTableColumnReorderHandle);\n\nvar _FixedDataTableHelper = require('./FixedDataTableHelper');\n\nvar _FixedDataTableHelper2 = _interopRequireDefault(_FixedDataTableHelper);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _cx = require('./cx');\n\nvar _cx2 = _interopRequireDefault(_cx);\n\nvar _joinClasses = require('./joinClasses');\n\nvar _joinClasses2 = _interopRequireDefault(_joinClasses);\n\nvar _shallowEqual = require('./shallowEqual');\n\nvar _shallowEqual2 = _interopRequireDefault(_shallowEqual);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableCell\n * @typechecks\n */\n\n\nvar DIR_SIGN = _FixedDataTableHelper2.default.DIR_SIGN;\nvar DEFAULT_PROPS = {\n  align: 'left',\n  highlighted: false\n};\nvar FixedDataTableCell = (0, _createReactClass2.default)({\n  displayName: 'FixedDataTableCell',\n\n  /**\n   * PropTypes are disabled in this component, because having them on slows\n   * down the FixedDataTable hugely in DEV mode. You can enable them back for\n   * development, but please don't commit this component with enabled propTypes.\n   */\n  propTypes_DISABLED_FOR_PERFORMANCE: {\n    isScrolling: _propTypes2.default.bool,\n    align: _propTypes2.default.oneOf(['left', 'center', 'right']),\n    className: _propTypes2.default.string,\n    highlighted: _propTypes2.default.bool,\n    width: _propTypes2.default.number.isRequired,\n    minWidth: _propTypes2.default.number,\n    maxWidth: _propTypes2.default.number,\n    height: _propTypes2.default.number.isRequired,\n    cell: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.element, _propTypes2.default.func]),\n    columnKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n    /**\n     * The row index that will be passed to `cellRenderer` to render.\n     */\n    rowIndex: _propTypes2.default.number.isRequired,\n\n    /**\n     * Callback for when resizer knob (in FixedDataTableCell) is clicked\n     * to initialize resizing. Please note this is only on the cells\n     * in the header.\n     * @param number combinedWidth\n     * @param number left\n     * @param number width\n     * @param number minWidth\n     * @param number maxWidth\n     * @param number|string columnKey\n     * @param object event\n     */\n    onColumnResize: _propTypes2.default.func,\n    onColumnReorder: _propTypes2.default.func,\n\n    /**\n     * The left offset in pixels of the cell.\n     */\n    left: _propTypes2.default.number,\n\n    /**\n     * Flag for enhanced performance check\n     */\n    pureRendering: _propTypes2.default.bool,\n\n    /**\n     * Whether touch is enabled or not.\n     */\n    touchEnabled: _propTypes2.default.bool,\n\n    /**\n     * Whether cell is in a header or footer row or not\n     */\n    isHeaderOrFooter: _propTypes2.default.bool\n  },\n  getInitialState: function getInitialState() {\n    return {\n      isReorderingThisColumn: false,\n      displacement: 0,\n      reorderingDisplacement: 0\n    };\n  },\n  shouldComponentUpdate: function shouldComponentUpdate(nextProps) {\n    if (nextProps.isScrolling && this.props.rowIndex === nextProps.rowIndex) {\n      return false;\n    } //Performance check not enabled\n\n\n    if (!nextProps.pureRendering) {\n      return true;\n    }\n\n    var _props = this.props,\n        oldCell = _props.cell,\n        oldIsScrolling = _props.isScrolling,\n        oldProps = _objectWithoutProperties(_props, ['cell', 'isScrolling']);\n\n    var newCell = nextProps.cell,\n        newIsScrolling = nextProps.isScrolling,\n        newProps = _objectWithoutProperties(nextProps, ['cell', 'isScrolling']);\n\n    if (!(0, _shallowEqual2.default)(oldProps, newProps)) {\n      return true;\n    }\n\n    if (!oldCell || !newCell || oldCell.type !== newCell.type) {\n      return true;\n    }\n\n    if (!(0, _shallowEqual2.default)(oldCell.props, newCell.props)) {\n      return true;\n    }\n\n    return false;\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(props) {\n    var left = props.left + this.state.displacement;\n    var newState = {\n      isReorderingThisColumn: false\n    };\n\n    if (props.isColumnReordering) {\n      var originalLeft = props.columnReorderingData.originalLeft;\n      var reorderCellLeft = originalLeft + props.columnReorderingData.dragDistance;\n      var farthestPossiblePoint = props.columnGroupWidth - props.columnReorderingData.columnWidth; // ensure the cell isn't being dragged out of the column group\n\n      reorderCellLeft = Math.max(reorderCellLeft, 0);\n      reorderCellLeft = Math.min(reorderCellLeft, farthestPossiblePoint);\n\n      if (props.columnKey === props.columnReorderingData.columnKey) {\n        newState.displacement = reorderCellLeft - props.left;\n        newState.isReorderingThisColumn = true;\n      } else {\n        var reorderCellRight = reorderCellLeft + props.columnReorderingData.columnWidth;\n        var reorderCellCenter = reorderCellLeft + props.columnReorderingData.columnWidth / 2;\n        var centerOfThisColumn = left + props.width / 2;\n        var cellIsBeforeOneBeingDragged = reorderCellCenter > centerOfThisColumn;\n        var cellWasOriginallyBeforeOneBeingDragged = originalLeft > props.left;\n        var changedPosition = false;\n        var dragPoint, thisCellPoint;\n\n        if (cellIsBeforeOneBeingDragged) {\n          if (reorderCellLeft < centerOfThisColumn) {\n            changedPosition = true;\n\n            if (cellWasOriginallyBeforeOneBeingDragged) {\n              newState.displacement = props.columnReorderingData.columnWidth;\n            } else {\n              newState.displacement = 0;\n            }\n          }\n        } else {\n          if (reorderCellRight > centerOfThisColumn) {\n            changedPosition = true;\n\n            if (cellWasOriginallyBeforeOneBeingDragged) {\n              newState.displacement = 0;\n            } else {\n              newState.displacement = props.columnReorderingData.columnWidth * -1;\n            }\n          }\n        }\n\n        if (changedPosition) {\n          if (cellIsBeforeOneBeingDragged) {\n            if (!props.columnReorderingData.columnAfter) {\n              props.columnReorderingData.columnAfter = props.columnKey;\n            }\n          } else {\n            props.columnReorderingData.columnBefore = props.columnKey;\n          }\n        } else if (cellIsBeforeOneBeingDragged) {\n          props.columnReorderingData.columnBefore = props.columnKey;\n        } else if (!props.columnReorderingData.columnAfter) {\n          props.columnReorderingData.columnAfter = props.columnKey;\n        }\n      }\n    } else {\n      newState.displacement = 0;\n    }\n\n    this.setState(newState);\n  },\n  getDefaultProps: function getDefaultProps()\n  /*object*/\n  {\n    return DEFAULT_PROPS;\n  },\n  render: function render()\n  /*object*/\n  {\n    var _props2 = this.props,\n        height = _props2.height,\n        width = _props2.width,\n        columnKey = _props2.columnKey,\n        isHeaderOrFooter = _props2.isHeaderOrFooter,\n        props = _objectWithoutProperties(_props2, ['height', 'width', 'columnKey', 'isHeaderOrFooter']);\n\n    var style = {\n      height: height,\n      width: width\n    };\n\n    if (DIR_SIGN === 1) {\n      style.left = props.left;\n    } else {\n      style.right = props.left;\n    }\n\n    if (this.state.isReorderingThisColumn) {\n      style.transform = 'translateX(' + this.state.displacement + 'px) translateZ(0)';\n      style.zIndex = 1;\n    }\n\n    var className = (0, _joinClasses2.default)((0, _cx2.default)({\n      'fixedDataTableCellLayout/main': true,\n      'fixedDataTableCellLayout/lastChild': props.lastChild,\n      'fixedDataTableCellLayout/alignRight': props.align === 'right',\n      'fixedDataTableCellLayout/alignCenter': props.align === 'center',\n      'public/fixedDataTableCell/alignRight': props.align === 'right',\n      'public/fixedDataTableCell/highlighted': props.highlighted,\n      'public/fixedDataTableCell/main': true,\n      'public/fixedDataTableCell/hasReorderHandle': !!props.onColumnReorder,\n      'public/fixedDataTableCell/reordering': this.state.isReorderingThisColumn\n    }), props.className);\n    var columnResizerComponent;\n\n    if (props.onColumnResize) {\n      var suppress = function suppress(event) {\n        event.preventDefault();\n        event.stopPropagation();\n      };\n\n      var columnResizerStyle = {\n        height: height\n      };\n      ;\n      columnResizerComponent = _react2.default.createElement('div', {\n        className: (0, _cx2.default)('fixedDataTableCellLayout/columnResizerContainer'),\n        style: columnResizerStyle,\n        onMouseDown: this._onColumnResizerMouseDown,\n        onTouchStart: this.props.touchEnabled ? this._onColumnResizerMouseDown : null,\n        onTouchEnd: this.props.touchEnabled ? suppress : null,\n        onTouchMove: this.props.touchEnabled ? suppress : null\n      }, _react2.default.createElement('div', {\n        className: (0, _joinClasses2.default)((0, _cx2.default)('fixedDataTableCellLayout/columnResizerKnob'), (0, _cx2.default)('public/fixedDataTableCell/columnResizerKnob')),\n        style: columnResizerStyle\n      }));\n    }\n\n    var columnReorderComponent;\n\n    if (props.onColumnReorder) {\n      //header row\n      columnReorderComponent = _react2.default.createElement(_FixedDataTableColumnReorderHandle2.default, _extends({\n        columnKey: this.columnKey,\n        touchEnabled: this.props.touchEnabled,\n        onMouseDown: this._onColumnReorderMouseDown,\n        onTouchStart: this._onColumnReorderMouseDown,\n        height: height\n      }, this.props));\n    }\n\n    var cellProps = {\n      columnKey: columnKey,\n      height: height,\n      width: width\n    };\n\n    if (props.rowIndex >= 0) {\n      cellProps.rowIndex = props.rowIndex;\n    }\n\n    var content;\n\n    if (_react2.default.isValidElement(props.cell)) {\n      content = _react2.default.cloneElement(props.cell, cellProps);\n    } else if (typeof props.cell === 'function') {\n      content = props.cell(cellProps);\n    } else {\n      content = _react2.default.createElement(_FixedDataTableCellDefault2.default, cellProps, props.cell);\n    }\n\n    var role = isHeaderOrFooter ? \"columnheader\" : \"gridcell\";\n    return _react2.default.createElement('div', {\n      className: className,\n      style: style,\n      role: role\n    }, columnResizerComponent, columnReorderComponent, content);\n  },\n  _onColumnResizerMouseDown: function _onColumnResizerMouseDown(\n  /*object*/\n  event) {\n    this.props.onColumnResize(this.props.left, this.props.width, this.props.minWidth, this.props.maxWidth, this.props.columnKey, event);\n    /**\n     * This prevents the rows from moving around when we resize the\n     * headers on touch devices.\n     */\n\n    if (this.props.touchEnabled) {\n      event.preventDefault();\n      event.stopPropagation();\n    }\n  },\n  _onColumnReorderMouseDown: function _onColumnReorderMouseDown(\n  /*object*/\n  event) {\n    this.props.onColumnReorder(this.props.columnKey, this.props.width, this.props.left, event);\n  }\n});\nmodule.exports = FixedDataTableCell;","map":null,"metadata":{},"sourceType":"script"}