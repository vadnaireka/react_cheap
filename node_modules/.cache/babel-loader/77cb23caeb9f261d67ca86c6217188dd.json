{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableColumn\n * @typechecks\n */\n\n/**\n * Component that defines the attributes of table column.\n */\n\n\nvar FixedDataTableColumn = function (_React$Component) {\n  _inherits(FixedDataTableColumn, _React$Component);\n\n  function FixedDataTableColumn() {\n    _classCallCheck(this, FixedDataTableColumn);\n\n    return _possibleConstructorReturn(this, (FixedDataTableColumn.__proto__ || Object.getPrototypeOf(FixedDataTableColumn)).apply(this, arguments));\n  }\n\n  _createClass(FixedDataTableColumn, [{\n    key: 'render',\n    value: function render() {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('Component <FixedDataTableColumn /> should never render');\n      }\n\n      return null;\n    }\n  }]);\n\n  return FixedDataTableColumn;\n}(_react2.default.Component);\n\nFixedDataTableColumn.__TableColumn__ = true;\nFixedDataTableColumn.propTypes = {\n  /**\n   * The horizontal alignment of the table cell content.\n   */\n  align: _propTypes2.default.oneOf(['left', 'center', 'right']),\n\n  /**\n   * Controls if the column is fixed when scrolling in the X axis.\n   */\n  fixed: _propTypes2.default.bool,\n\n  /**\n   * Controls if the column is fixed to the right side of the table when scrolling in the X axis.\n   */\n  fixedRight: _propTypes2.default.bool,\n\n  /**\n   * The header cell for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  header: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n\n  /**\n   * This is the body cell that will be cloned for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   rowIndex; number // (the row index of the cell)\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  cell: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n\n  /**\n   * This is the footer cell for this column.\n   * This can either be a string a React element, or a function that generates\n   * a React Element. Passing in a string will render a default header cell\n   * with that string. By default, the React element passed in can expect to\n   * receive the following props:\n   *\n   * ```\n   * props: {\n   *   columnKey: string // (of the column, if given)\n   *   height: number // (supplied from the Table or rowHeightGetter)\n   *   width: number // (supplied from the Column)\n   * }\n   * ```\n   *\n   * Because you are passing in your own React element, you can feel free to\n   * pass in whatever props you may want or need.\n   *\n   * If you pass in a function, you will receive the same props object as the\n   * first argument.\n   */\n  footer: _propTypes2.default.oneOfType([_propTypes2.default.node, _propTypes2.default.func]),\n\n  /**\n   * This is used to uniquely identify the column, and is not required unless\n   * you a resizing columns. This will be the key given in the\n   * `onColumnResizeEndCallback` on the Table.\n   */\n  columnKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /**\n   * The pixel width of the column.\n   */\n  width: _propTypes2.default.number.isRequired,\n\n  /**\n   * If this is a resizable column this is its minimum pixel width.\n   */\n  minWidth: _propTypes2.default.number,\n\n  /**\n   * If this is a resizable column this is its maximum pixel width.\n   */\n  maxWidth: _propTypes2.default.number,\n\n  /**\n   * The grow factor relative to other columns. Same as the flex-grow API\n   * from http://www.w3.org/TR/css3-flexbox/. Basically, take any available\n   * extra width and distribute it proportionally according to all columns'\n   * flexGrow values. Defaults to zero (no-flexing).\n   */\n  flexGrow: _propTypes2.default.number,\n\n  /**\n   * Whether the column can be resized with the\n   * FixedDataTableColumnResizeHandle. Please note that if a column\n   * has a flex grow, once you resize the column this will be set to 0.\n   *\n   * This property only provides the UI for the column resizing. If this\n   * is set to true, you will need to set the onColumnResizeEndCallback table\n   * property and render your columns appropriately.\n   */\n  isResizable: _propTypes2.default.bool,\n\n  /**\n   * Whether the column can be dragged to reorder.\n   */\n  isReorderable: _propTypes2.default.bool,\n\n  /**\n   * Whether cells in this column can be removed from document when outside\n   * of viewport as a result of horizontal scrolling.\n   * Setting this property to true allows the table to not render cells in\n   * particular column that are outside of viewport for visible rows. This\n   * allows to create table with many columns and not have vertical scrolling\n   * performance drop.\n   * Setting the property to false will keep previous behaviour and keep\n   * cell rendered if the row it belongs to is visible.\n   */\n  allowCellsRecycling: _propTypes2.default.bool,\n\n  /**\n   * Flag to enable performance check when rendering. Stops the component from\n   * rendering if none of it's passed in props have changed\n   */\n  pureRendering: _propTypes2.default.bool\n};\nFixedDataTableColumn.defaultProps = {\n  allowCellsRecycling: false,\n  fixed: false,\n  fixedRight: false\n};\nmodule.exports = FixedDataTableColumn;","map":null,"metadata":{},"sourceType":"script"}