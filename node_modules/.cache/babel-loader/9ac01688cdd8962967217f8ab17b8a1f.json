{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _cx = require('./cx');\n\nvar _cx2 = _interopRequireDefault(_cx);\n\nvar _joinClasses = require('./joinClasses');\n\nvar _joinClasses2 = _interopRequireDefault(_joinClasses);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule FixedDataTableCellDefault\n * @typechecks\n */\n\n/**\n * Component that handles default cell layout and styling.\n *\n * All props unless specified below will be set onto the top level `div`\n * rendered by the cell.\n *\n * Example usage via from a `Column`:\n * ```\n * const MyColumn = (\n *   <Column\n *     cell={({rowIndex, width, height}) => (\n *       <Cell\n *         width={width}\n *         height={height}\n *         className=\"my-class\">\n *         Cell number: <span>{rowIndex}</span>\n*        </Cell>\n *     )}\n *     width={100}\n *   />\n * );\n * ```\n */\n\n\nvar FixedDataTableCellDefault = function (_React$Component) {\n  _inherits(FixedDataTableCellDefault, _React$Component);\n\n  function FixedDataTableCellDefault() {\n    _classCallCheck(this, FixedDataTableCellDefault);\n\n    return _possibleConstructorReturn(this, (FixedDataTableCellDefault.__proto__ || Object.getPrototypeOf(FixedDataTableCellDefault)).apply(this, arguments));\n  }\n\n  _createClass(FixedDataTableCellDefault, [{\n    key: 'render',\n    value: function render() {\n      //Remove some props like columnKey and rowIndex so we don't pass it into the div\n      var _props = this.props,\n          height = _props.height,\n          width = _props.width,\n          style = _props.style,\n          className = _props.className,\n          children = _props.children,\n          columnKey = _props.columnKey,\n          rowIndex = _props.rowIndex,\n          props = _objectWithoutProperties(_props, ['height', 'width', 'style', 'className', 'children', 'columnKey', 'rowIndex']);\n\n      var innerStyle = _extends({\n        height: height,\n        width: width\n      }, style);\n\n      return _react2.default.createElement('div', _extends({}, props, {\n        className: (0, _joinClasses2.default)((0, _cx2.default)('fixedDataTableCellLayout/wrap1'), (0, _cx2.default)('public/fixedDataTableCell/wrap1'), className),\n        style: innerStyle\n      }), _react2.default.createElement('div', {\n        className: (0, _joinClasses2.default)((0, _cx2.default)('fixedDataTableCellLayout/wrap2'), (0, _cx2.default)('public/fixedDataTableCell/wrap2'))\n      }, _react2.default.createElement('div', {\n        className: (0, _joinClasses2.default)((0, _cx2.default)('fixedDataTableCellLayout/wrap3'), (0, _cx2.default)('public/fixedDataTableCell/wrap3'))\n      }, _react2.default.createElement('div', {\n        className: (0, _cx2.default)('public/fixedDataTableCell/cellContent')\n      }, children))));\n    }\n  }]);\n\n  return FixedDataTableCellDefault;\n}(_react2.default.Component);\n\nFixedDataTableCellDefault.propTypes = {\n  /**\n   * Outer height of the cell.\n   */\n  height: _propTypes2.default.number,\n\n  /**\n   * Outer width of the cell.\n   */\n  width: _propTypes2.default.number,\n\n  /**\n   * Optional prop that if specified on the `Column` will be passed to the\n   * cell. It can be used to uniquely identify which column is the cell is in.\n   */\n  columnKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n  /**\n   * Optional prop that represents the rows index in the table.\n   * For the 'cell' prop of a Column, this parameter will exist for any\n   * cell in a row with a positive index.\n   *\n   * Below that entry point the user is welcome to consume or\n   * pass the prop through at their discretion.\n   */\n  rowIndex: _propTypes2.default.number\n};\nmodule.exports = FixedDataTableCellDefault;","map":null,"metadata":{},"sourceType":"script"}