{"ast":null,"code":"var _jsxFileName = \"/home/reka/Work/advanced/react_cheap/src/components/AutoComplete.js\";\nimport React, { Component } from 'react';\nimport './AutoComplete.css';\n\nclass AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), \"i\");\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n      this.props.sendDataToParent(this.props.name, this.state.text);\n    };\n\n    this.items = ['London', \"Paris\", \"Budapest\", \"BUD\", \"AMS\", \"Amsterdam\", \"Prague\", \"Pula\"];\n    this.state = {\n      suggestions: [],\n      text: \"\"\n    };\n  }\n\n  suggestionSelected(value) {\n    this.setState(() => ({\n      text: value,\n      suggestions: []\n    }));\n  }\n\n  renderSuggestion() {\n    const suggestions = this.state.suggestions;\n\n    if (suggestions.length === 0) {\n      return null;\n    }\n\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, suggestions.map(item => React.createElement(\"li\", {\n      onClick: () => this.suggestionSelected(item),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, item)));\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"AutoComplete\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      value: this.state.text,\n      onChange: this.onTextChange,\n      type: \"text\",\n      placeholder: this.props.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), this.renderSuggestion());\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/home/reka/Work/advanced/react_cheap/src/components/AutoComplete.js"],"names":["React","Component","AutoComplete","constructor","props","onTextChange","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","text","sendDataToParent","name","state","suggestionSelected","renderSuggestion","map","item","render","placeholder"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,oBAAP;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAoBlBC,YApBkB,GAoBFC,CAAD,IAAO;AAClB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAqB;AACjB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,KAAKI,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACH;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAET,QAAAA,WAAF;AAAeU,QAAAA,IAAI,EAAEZ;AAArB,OAAP,CAAd;AACA,WAAKH,KAAL,CAAWgB,gBAAX,CAA4B,KAAKhB,KAAL,CAAWiB,IAAvC,EAA6C,KAAKC,KAAL,CAAWH,IAAxD;AACH,KA7BiB;;AAEd,SAAKN,KAAL,GAAW,CACP,QADO,EAEP,OAFO,EAGP,UAHO,EAIP,KAJO,EAKP,KALO,EAMP,WANO,EAOP,QAPO,EAQP,MARO,CAAX;AAUA,SAAKS,KAAL,GAAW;AACPb,MAAAA,WAAW,EAAE,EADN;AAEPU,MAAAA,IAAI,EAAG;AAFA,KAAX;AAKH;;AAcDI,EAAAA,kBAAkB,CAAEhB,KAAF,EAAQ;AACtB,SAAKW,QAAL,CAAc,OAAO;AACjBC,MAAAA,IAAI,EAAGZ,KADU;AAEjBE,MAAAA,WAAW,EAAE;AAFI,KAAP,CAAd;AAIH;;AAEDe,EAAAA,gBAAgB,GAAE;AAAA,UACNf,WADM,GACU,KAAKa,KADf,CACNb,WADM;;AAEd,QAAKA,WAAW,CAACC,MAAZ,KAAuB,CAA5B,EAA8B;AAC1B,aAAO,IAAP;AACH;;AACD,WACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKD,WAAW,CAACgB,GAAZ,CAAiBC,IAAD,IAAU;AAAI,MAAA,OAAO,EAAE,MAAM,KAAKH,kBAAL,CAAwBG,IAAxB,CAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAmDA,IAAnD,CAA1B,CADL,CADA;AAKC;;AAGLC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,KAAK,EAAE,KAAKL,KAAL,CAAWH,IAAzB;AAA+B,MAAA,QAAQ,EAAE,KAAKd,YAA9C;AAA4D,MAAA,IAAI,EAAC,MAAjE;AAAwE,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWwB,WAAhG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEK,KAAKJ,gBAAL,EAFL,CADJ;AAMH;;AA5D+B;;AAgEpC,eAAetB,YAAf","sourcesContent":["import React, {Component} from 'react';\nimport './AutoComplete.css';\n\nclass AutoComplete extends Component{\n\n    constructor(props){\n        super(props);\n        this.items=[\n            'London',\n            \"Paris\",\n            \"Budapest\",\n            \"BUD\",\n            \"AMS\",\n            \"Amsterdam\",\n            \"Prague\",\n            \"Pula\"\n        ];\n        this.state={\n            suggestions: [],\n            text : \"\"\n\n        }\n    }\n\n\n    onTextChange = (e) => {\n        const value = e.target.value;\n        let suggestions = [];\n        if (value.length > 0){\n            const regex = new RegExp(`^${value}`, \"i\");\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        }\n        this.setState(() => ({ suggestions, text: value}));\n        this.props.sendDataToParent(this.props.name, this.state.text);\n    };\n\n    suggestionSelected (value){\n        this.setState(() => ({\n            text : value,\n            suggestions: [],\n        }))\n    }\n\n    renderSuggestion(){\n        const  {suggestions } = this.state;\n        if ( suggestions.length === 0){\n            return null;\n        }\n        return (\n        <ul>\n            {suggestions.map((item) => <li onClick={() => this.suggestionSelected(item)}>{item}</li>)}\n        </ul>\n        )\n        }\n\n\n    render(){\n        return(\n            <div className=\"AutoComplete\">\n                <input value={this.state.text} onChange={this.onTextChange} type=\"text\" placeholder={this.props.placeholder}/>\n                {this.renderSuggestion()}\n            </div>\n        )\n    }\n\n}\n\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}