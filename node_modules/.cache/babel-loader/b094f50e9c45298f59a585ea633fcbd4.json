{"ast":null,"code":"'use strict';\n\nvar _DOMMouseMoveTracker = require('./DOMMouseMoveTracker');\n\nvar _DOMMouseMoveTracker2 = _interopRequireDefault(_DOMMouseMoveTracker);\n\nvar _Locale = require('./Locale');\n\nvar _Locale2 = _interopRequireDefault(_Locale);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _ReactComponentWithPureRenderMixin = require('./ReactComponentWithPureRenderMixin');\n\nvar _ReactComponentWithPureRenderMixin2 = _interopRequireDefault(_ReactComponentWithPureRenderMixin);\n\nvar _FixedDataTableEventHelper = require('./FixedDataTableEventHelper');\n\nvar _FixedDataTableEventHelper2 = _interopRequireDefault(_FixedDataTableEventHelper);\n\nvar _clamp = require('./clamp');\n\nvar _clamp2 = _interopRequireDefault(_clamp);\n\nvar _cx = require('./cx');\n\nvar _cx2 = _interopRequireDefault(_cx);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar FixedDataTableColumnReorderHandle = (0, _createReactClass2.default)({\n  displayName: 'FixedDataTableColumnReorderHandle',\n  mixins: [_ReactComponentWithPureRenderMixin2.default],\n  propTypes: {\n    /**\n     * When resizing is complete this is called.\n     */\n    onColumnReorderEnd: _propTypes2.default.func,\n\n    /**\n     * Column key for the column being reordered.\n     */\n    columnKey: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number]),\n\n    /**\n     * Whether the reorder handle should respond to touch events or not.\n     */\n    touchEnabled: _propTypes2.default.bool\n  },\n  getInitialState: function getInitialState()\n  /*object*/\n  {\n    return {\n      dragDistance: 0\n    };\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(\n  /*object*/\n  newProps) {},\n  componentWillUnmount: function componentWillUnmount() {\n    if (this._mouseMoveTracker) {\n      cancelAnimationFrame(this.frameId);\n      this.frameId = null;\n\n      this._mouseMoveTracker.releaseMouseMoves();\n\n      this._mouseMoveTracker = null;\n    }\n  },\n  render: function render()\n  /*object*/\n  {\n    var style = {\n      height: this.props.height\n    };\n    return _react2.default.createElement('div', {\n      className: (0, _cx2.default)({\n        'fixedDataTableCellLayout/columnReorderContainer': true,\n        'fixedDataTableCellLayout/columnReorderContainer/active': false\n      }),\n      onMouseDown: this.onMouseDown,\n      onTouchStart: this.props.touchEnabled ? this.onMouseDown : null,\n      onTouchEnd: this.props.touchEnabled ? function (e) {\n        return e.stopPropagation();\n      } : null,\n      onTouchMove: this.props.touchEnabled ? function (e) {\n        return e.stopPropagation();\n      } : null,\n      style: style\n    });\n  },\n  onMouseDown: function onMouseDown(event) {\n    var targetRect = event.target.getBoundingClientRect();\n\n    var coordinates = _FixedDataTableEventHelper2.default.getCoordinatesFromEvent(event);\n\n    var mouseLocationInElement = coordinates.x - targetRect.offsetLeft;\n    var mouseLocationInRelationToColumnGroup = mouseLocationInElement + event.target.parentElement.offsetLeft;\n    this._mouseMoveTracker = new _DOMMouseMoveTracker2.default(this._onMove, this._onColumnReorderEnd, document.body, this.props.touchEnabled);\n\n    this._mouseMoveTracker.captureMouseMoves(event);\n\n    this.setState({\n      dragDistance: 0\n    });\n    this.props.onMouseDown({\n      columnKey: this.props.columnKey,\n      mouseLocation: {\n        dragDistance: 0,\n        inElement: mouseLocationInElement,\n        inColumnGroup: mouseLocationInRelationToColumnGroup\n      }\n    });\n    this._distance = 0;\n    this._animating = true;\n    this.frameId = requestAnimationFrame(this._updateState);\n    /**\n     * This prevents the rows from moving around when we drag the\n     * headers on touch devices.\n     */\n\n    if (this.props.touchEnabled) {\n      event.stopPropagation();\n    }\n  },\n  _onMove: function _onMove(\n  /*number*/\n  deltaX) {\n    this._distance = this.state.dragDistance + deltaX;\n  },\n  _onColumnReorderEnd: function _onColumnReorderEnd(\n  /*boolean*/\n  cancelReorder) {\n    this._animating = false;\n    cancelAnimationFrame(this.frameId);\n    this.frameId = null;\n\n    this._mouseMoveTracker.releaseMouseMoves();\n\n    this.props.columnReorderingData.cancelReorder = cancelReorder;\n    this.props.onColumnReorderEnd();\n  },\n  _updateState: function _updateState() {\n    if (this._animating) {\n      this.frameId = requestAnimationFrame(this._updateState);\n    }\n\n    this.setState({\n      dragDistance: this._distance\n    });\n    this.props.onColumnReorderMove(this._distance);\n  }\n});\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * This is to be used with the FixedDataTable. It is a header icon\n * that allows you to reorder the corresponding column.\n *\n * @providesModule FixedDataTableColumnReorderHandle\n * @typechecks\n */\n\nmodule.exports = FixedDataTableColumnReorderHandle;","map":null,"metadata":{},"sourceType":"script"}