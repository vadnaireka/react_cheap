{"ast":null,"code":"var _jsxFileName = \"/home/reka/Work/advanced/react_cheap/src/components/AutoComplete.js\";\nimport React, { Component } from 'react';\n\nclass AutoComplete extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChange = e => {\n      const value = e.target.value;\n      let suggestions = [];\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), \"i\");\n        suggestions = this.items.sort().filter(v => regex.test(v));\n      }\n\n      this.setState(() => ({\n        suggestions\n      }));\n    };\n\n    this.items = ['London', \"Paris\", \"Budapest\", \"BUD\", \"AMS\", \"Amsterdam\", \"Prague\", \"Pula\"];\n    this.state = {\n      suggestions: []\n    };\n  }\n\n  renderSuggestion() {\n    const suggestions = this.state.suggestions;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      onChange: this.onTextChange,\n      type: \"text\",\n      placeholder: this.props.placeholder,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }), React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, this.items.map(item => React.createElement(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, item))));\n  }\n\n}\n\nexport default AutoComplete;","map":{"version":3,"sources":["/home/reka/Work/advanced/react_cheap/src/components/AutoComplete.js"],"names":["React","Component","AutoComplete","constructor","props","onTextChange","e","value","target","suggestions","length","regex","RegExp","items","sort","filter","v","test","setState","state","renderSuggestion","render","placeholder","map","item"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;;AAEA,MAAMC,YAAN,SAA2BD,SAA3B,CAAoC;AAEhCE,EAAAA,WAAW,CAACC,KAAD,EAAO;AACd,UAAMA,KAAN;;AADc,SAkBlBC,YAlBkB,GAkBFC,CAAD,IAAO;AAClB,YAAMC,KAAK,GAAGD,CAAC,CAACE,MAAF,CAASD,KAAvB;AACA,UAAIE,WAAW,GAAG,EAAlB;;AACA,UAAIF,KAAK,CAACG,MAAN,GAAe,CAAnB,EAAqB;AACjB,cAAMC,KAAK,GAAG,IAAIC,MAAJ,YAAeL,KAAf,GAAwB,GAAxB,CAAd;AACAE,QAAAA,WAAW,GAAG,KAAKI,KAAL,CAAWC,IAAX,GAAkBC,MAAlB,CAAyBC,CAAC,IAAIL,KAAK,CAACM,IAAN,CAAWD,CAAX,CAA9B,CAAd;AACH;;AACD,WAAKE,QAAL,CAAc,OAAO;AAAET,QAAAA;AAAF,OAAP,CAAd;AACH,KA1BiB;;AAEd,SAAKI,KAAL,GAAW,CACP,QADO,EAEP,OAFO,EAGP,UAHO,EAIP,KAJO,EAKP,KALO,EAMP,WANO,EAOP,QAPO,EAQP,MARO,CAAX;AAUA,SAAKM,KAAL,GAAW;AACPV,MAAAA,WAAW,EAAE;AADN,KAAX;AAGH;;AAaDW,EAAAA,gBAAgB,GAAE;AAAA,UACNX,WADM,GACU,KAAKU,KADf,CACNV,WADM;AAGjB;;AAEDY,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAO,MAAA,QAAQ,EAAE,KAAKhB,YAAtB;AAAoC,MAAA,IAAI,EAAC,MAAzC;AAAgD,MAAA,WAAW,EAAE,KAAKD,KAAL,CAAWkB,WAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKT,KAAL,CAAWU,GAAX,CAAgBC,IAAD,IAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKA,IAAL,CAAzB,CADL,CAFJ,CADJ;AAQH;;AA5C+B;;AAgDpC,eAAetB,YAAf","sourcesContent":["import React, {Component} from 'react';\n\nclass AutoComplete extends Component{\n\n    constructor(props){\n        super(props);\n        this.items=[\n            'London',\n            \"Paris\",\n            \"Budapest\",\n            \"BUD\",\n            \"AMS\",\n            \"Amsterdam\",\n            \"Prague\",\n            \"Pula\"\n        ];\n        this.state={\n            suggestions: []\n        }\n    }\n\n\n    onTextChange = (e) => {\n        const value = e.target.value;\n        let suggestions = [];\n        if (value.length > 0){\n            const regex = new RegExp(`^${value}`, \"i\");\n            suggestions = this.items.sort().filter(v => regex.test(v));\n        }\n        this.setState(() => ({ suggestions}));\n    }\n\n    renderSuggestion(){\n        const  {suggestions } = this.state;\n        \n    }\n\n    render(){\n        return(\n            <div>\n                <input onChange={this.onTextChange} type=\"text\" placeholder={this.props.placeholder}/>\n                <ul>\n                    {this.items.map((item) => <li>{item}</li>)}\n                </ul>\n            </div>\n        )\n    }\n\n}\n\nexport default AutoComplete;"]},"metadata":{},"sourceType":"module"}