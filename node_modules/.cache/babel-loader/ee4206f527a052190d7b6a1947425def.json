{"ast":null,"code":"'use strict';\n\nvar _emptyFunction = require('./emptyFunction');\n\nvar _emptyFunction2 = _interopRequireDefault(_emptyFunction);\n\nvar _nativeRequestAnimationFrame = require('./nativeRequestAnimationFrame');\n\nvar _nativeRequestAnimationFrame2 = _interopRequireDefault(_nativeRequestAnimationFrame);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * Copyright Schrodinger, LLC\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n *\n * @providesModule requestAnimationFramePolyfill\n */\n\n\nvar lastTime = 0;\n/**\n * Here is the native and polyfill version of requestAnimationFrame.\n * Please don't use it directly and use requestAnimationFrame module instead.\n */\n\nvar requestAnimationFrame = _nativeRequestAnimationFrame2.default || function (callback) {\n  var currTime = Date.now();\n  var timeDelay = Math.max(0, 16 - (currTime - lastTime));\n  lastTime = currTime + timeDelay;\n  return global.setTimeout(function () {\n    callback(Date.now());\n  }, timeDelay);\n}; // Works around a rare bug in Safari 6 where the first request is never invoked.\n\n\nrequestAnimationFrame(_emptyFunction2.default);\nmodule.exports = requestAnimationFrame;","map":null,"metadata":{},"sourceType":"script"}